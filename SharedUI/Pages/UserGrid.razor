@page "/usergrid"

<PageTitle>User List</PageTitle>



<!-- All Safety Reports Grid -->
<RadzenRow Gap="15px" RowGap="15px" class="d-flex align-items-center mb-4">
    <RadzenColumn Size="4">
        <p class="title pt-3">User List</p>
    </RadzenColumn>
    <RadzenColumn Size="8" class="d-flex align-items-center justify-content-end ">
        <div class="input-group input-group-search me-3">
            <input class="form-control border-0 " type="search" placeholder="Search Name/ Mobile No.">

            <button type="button" class="btn btn-primary d-flex align-items-center">
                <RadzenIcon Icon="search" class="icon" />
            </button>

        </div>
        <RadzenButton Icon="hourglass_empty" Text="Filter"
            class="filter-btn bg-light button-shadow rounded-pill text-dark me-3" Target="modal1" />
        <a href="create_user">
            <RadzenButton Variant="Variant.Flat" Icon="add_circle_outline" Text="Create User"
                class="create-btn rounded-pill" />
        </a>
    </RadzenColumn>
</RadzenRow>


@* Modal Filter *@
<BSModal DataId="modal1">
    <Header>Modal Title</Header>
    <Content>Woohoo, you're reading this text in a modal!</Content>
    <Footer Context="modal">
        <BSButton MarginStart="Margins.Auto" Color="BSColor.Secondary" @onclick="modal.HideAsync">Close</BSButton>
        <BSButton Color="BSColor.Primary">Save changes</BSButton>
    </Footer>
</BSModal>

<!-- GRID -->

@if (user == null)
{
    <p>Loading........</p>
}
else
{
    <RadzenDataGrid AllowPaging="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        PageSize="10" AllowSorting="true" Data="@user" TItem="User" ColumnWidth="150px" class="table-body">

        <Columns>

            <RadzenDataGridColumn TItem="User" Property="UserLevel" Title="User Level"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="FullName" Title="Full Name"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="Depart" Title="Department"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="HOD" Title="HOD"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="CNumber" Title="Contact Number"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="Status" Title="Status">
                <Template Context="data">
                    <div class="@(data.Status == "Active" ? "dot-active" : "dot-inactive")"></div>
                    @data.Status
                </Template>
            </RadzenDataGridColumn>

        </Columns>

    </RadzenDataGrid>
}
@code {
    List<User> user = new();

    protected override async Task OnInitializedAsync()
    {
        @* user = await Task.Run(() => userlist.UserTable()); *@
    }

}