@page "/usergrid"
@inject UserList userlist

<PageTitle>User List</PageTitle>



<!-- All Safety Reports Grid -->
<RadzenRow Gap="15px" RowGap="15px" class="d-flex align-items-center mb-4">
    <RadzenColumn Size="4">
        <p class="title">User List</p>
    </RadzenColumn>
    <RadzenColumn Size="8" class="d-flex align-items-center justify-content-end ">
        <div class="input-group input-group-search me-3">
            <input class="form-control border-0 " type="search" placeholder="Search Name/ Mobile No.">

            <button type="button" class="btn btn-primary d-flex align-items-center">
                <RadzenIcon Icon="search" class="icon" />
            </button>

        </div>
        @* <RadzenButton class="filter-btn bg-light button-shadow rounded-pill text-dark me-3" Target="Filter">
        <i class="fa-solid fa-filter"></i>Filter
        </RadzenButton> *@

        <BSButton Color="BSColor.Primary" class="filter-btn border-0 bg-light button-shadow rounded-pill text-dark me-3"
            Target="Filter">
            <i class="filter-icon fa-solid fa-filter"></i>&nbsp;Filter
        </BSButton>

        <a href="create_user">
            <RadzenButton Variant="Variant.Flat" class="create-btn rounded-pill">
                <i class="fa-solid fa-user-plus"></i>Create User
            </RadzenButton>
        </a>
    </RadzenColumn>
</RadzenRow>


@* Modal Filter *@
<BSModal DataId="Filter">
    <Header>
        <h4 class="text-primary">User Filter</h4>
    </Header>
    <Content>
        <h5 class="text-secondary">Level</h5>
        <BSRow Justify="Justify.Center" class="align-middle ms-5">
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">Level 1</BSLabel>
                </div>
            </BSCol>
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">Level 2</BSLabel>
                </div>
            </BSCol>
        </BSRow>

        <BSRow Justify="Justify.Center" class="align-middle ms-5 mb-3">
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">Level 3</BSLabel>
                </div>
            </BSCol>
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">Level 4</BSLabel>
                </div>
            </BSCol>
        </BSRow>


        <h5 class="text-secondary">Status</h5>
        <BSRow Justify="Justify.Center" class="align-middle ms-5 mb-3">
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">Active</BSLabel>
                </div>
            </BSCol>
            <BSCol>
                <div Class="@BS.Form_Check">
                    <BSInputCheckbox CheckedValue="@("levels")" Value="@("")" />
                    <BSLabel IsCheckLabel="true">In-active</BSLabel>
                </div>
            </BSCol>
        </BSRow>


        <h5 class="text-secondary">Departments</h5>
        <RadzenDropDown @bind-Value=@dept Data=@user TextProperty="Department" ValueProperty="dept_val"
            Name="DropDownMultipleChips" Multiple=true AllowClear=true Placeholder="Select products" Chips=true
            Style="width: 100%; max-width: 400px;" />

    </Content>
    <Footer Context="modal">
        <BSButton MarginStart="Margins.Auto" class="border border-primary bg-light rounded-pill text-primary"
            @onclick="modal.HideAsync">
            Reset</BSButton>
        <BSButton class="text-white bg-primary rounded-pill">Apply</BSButton>
    </Footer>
</BSModal>

<!-- GRID -->

@if (user == null)
{
    <p>Loading........</p>
}
else
{
    <RadzenDataGrid AllowPaging="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
        PageSize="10" AllowSorting="true" Data="@user" TItem="User" ColumnWidth="150px" class="table-body">

        <Columns>

            <RadzenDataGridColumn TItem="User" Property="UserLevel" Title="User Level"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="FullName" Title="Full Name"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="Depart" Title="Department"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="HOD" Title="HOD"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="CNumber" Title="Contact Number"></RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="User" Property="Status" Title="Status">
                <Template Context="data">
                    <div class="@(data.Status == "Active" ? "dot-active" : "dot-inactive")"></div>
                    @data.Status
                </Template>
            </RadzenDataGridColumn>

        </Columns>

    </RadzenDataGrid>
}
@code {
    List<User> user = new();

    protected override async Task OnInitializedAsync()
    {
        user = await Task.Run(() => userlist.UserTable());
    }

    //filter
    string dept_val = "Department 1";
    List<string> dept = new(){
"Department 1", "Department 2", "Department 3", "Department 4"
};

}