FROM mcr.microsoft.com/dotnet/sdk:8.0-alpine as build
WORKDIR /src
RUN dotnet dev-certs https -t
COPY . .
RUN dotnet restore ./API/API.csproj
RUN dotnet restore ./DB/DB.csproj
RUN dotnet publish -c release -o /api ./API/API.csproj --no-restore
RUN dotnet publish -c release -o /db ./DB/DB.csproj --no-restore

### WasumUI Build ###

RUN sed -i -e s@{APIBaseURL}@https://adanicement1view.ezr.digital/api/@g Common/AppConsts.cs
RUN sed -i -e s/{AuthAPIKey}/b31471190caf8768216f9058451467dc11009264110092641100926411b20b2536eec78887ebdda364cf54eb0e/g Common/AppConsts.cs
RUN sed -i -e s/{Environment}/DEBUG/g Common/AppConsts.cs
# RUN sed -i -e s/{RazorPayKey}/$RazorPayKey/g Common/AppConsts.cs
# RUN sed -i -e s/{RazorPaySecretKey}/$RazorPaySecretKey/g Common/AppConsts.cs

RUN dotnet restore ./WasmUI/WasmUI.csproj
RUN dotnet publish -c release -o /ui ./WasmUI/WasmUI.csproj --no-restore

###########################################################################################################################
 
FROM mcr.microsoft.com/dotnet/aspnet:8.0-alpine as final
WORKDIR /app
RUN apk update && apk upgrade --available

# Configure nginx - http
RUN apk --no-cache add nginx supervisor libcap
COPY ./Server/nginx.conf /etc/nginx/nginx.conf
# Configure nginx - default Server
COPY ./Server/default.conf /etc/nginx/conf.d/default.conf

# Configs
RUN mkdir /run/openrc
RUN touch /run/openrc/softlevel
RUN setcap 'cap_net_bind_service=+ep' /usr/sbin/nginx

# Configure supervisord
COPY ./Server/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
# Make sure files/folders needed by the processes are accessable when they run under the nobody user
RUN chown -R nobody:nobody /app /run /var/lib/nginx /var/log/nginx

RUN apk --no-cache add curl
EXPOSE 81
EXPOSE 80
EXPOSE 443
COPY --from=build /root/.dotnet/corefx/cryptography/x509stores/my/* /root/.dotnet/corefx/cryptography/x509stores/my/

# Switch to use a non-root user from here on
USER nobody 
COPY --chown=nobody --from=build /api ./Backend
COPY --chown=nobody --from=build /db ./DB
COPY --chown=nobody --from=build /ui/wwwroot ./
RUN mv ./DB/DBScripts/ ./DB
ENV ASPNETCORE_URLS=http://0.0.0.0:5001

# Let supervisord start nginx & php-fpm
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
#ENTRYPOINT ["/bin/sh", "-c" , "nginx -g 'daemon off;' && cd ./DB && dotnet /app/DB/DB.dll && cd .. && dotnet /app/Backend/API.dll"]